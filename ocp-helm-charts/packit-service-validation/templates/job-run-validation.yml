apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Values.cronjob_name }}
spec:
  schedule: "{{ .Values.cron.schedule }}"
  concurrencyPolicy: {{ .Values.cron.concurrencyPolicy }}
  startingDeadlineSeconds: {{ .Values.cron.startingDeadlineSeconds }}
  suspend: {{ .Values.cron.suspend }}
  successfulJobsHistoryLimit: {{ .Values.cron.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ .Values.cron.failedJobsHistoryLimit }}
  jobTemplate:
    metadata:
      annotations:
        timestamp: {{ now | quote }}
      creationTimestamp: null
      labels:
        app: {{ .Values.app_name }}
        deploymentconfig: {{ .Values.app_name }}
    spec:
      template:
        metadata:
          annotations:
            timestamp: {{ now | quote }}
          creationTimestamp: null
          labels:
            app: {{ .Values.app_name }}
            deploymentconfig: {{ .Values.app_name }}
        spec:
          containers:
          - name: {{ .Values.container.name }}
            image: "{{ .Values.image.repo }}:{{ .Values.image.tag }}"
            imagePullPolicy: IfNotPresent
            env:
            - name: GITHUB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.env_variables.github_token.name }}
                  key: {{ .Values.env_variables.github_token.key }}
            - name: SENTRY_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.env_variables.sentry_dsn.name }}
                  key: {{ .Values.env_variables.sentry_dsn.key }}
            - name: DEPLOYMENT
              value: {{ .Values.env_variables.deployment.value }}
          restartPolicy: OnFailure
